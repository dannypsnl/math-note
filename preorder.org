* preorder 預序

	A preorder is a relation on set X, such that, two elements of x, y ∈ X we can discuss x ≤ y.
 
	The following definition are quite important for preorder, we will assume

	- set X
	- A ⊆ X 

** upper/lower bound

	 An element x ∈ X is an upper bound of A, iff ∀ a ∈ A, a ≤ x

	 Reversely, x ∈ X is a lower bound of A, iff ∀ a ∈ A, x ≤ a

** greatest/least element

	 An upper bound x of A is the greatest element iff x ∈ A

	 Reversely, lower bound x of A is the least element iff x ∈ A

** maximal/minimal

	 An element a ∈ A is maximal, if ∀ b, a ≤ b implies a ≅ b

	 Reversely, a ∈ A is minimal, if ∀ b, b ≤ a implies b ≅ a

** join/meet

	 A join of A is that, a least element of the set of upper bounds for A (called least upper bound or supremum, sometimes)

	 A meet of A is, a greatest element of the set of lower bounds for A (called greatest lower bound or infimum, sometimes)

	 1. The syntax ∨A is a choice of one of the joins of A
	 2. The syntax ∧A is a choice of one of the meets of A
	 3. ∀ x ∈ X, ∨A ≤ x ⟹ A ≤ x
	 4. ∀ x ∈ X, x ≤ ∧A ⟹ x ≤ A

*** singleton has only one meet/join

		∨{x} = ∧{x} = x

*** empty set 

		The ∨∅ called ⊥, if it existed, ⊥ ≤ x

		The ∧∅ called ⊤, if it existed, x ≤ ⊤

** up/down set

	 A up-set of A is { x ∈ X | A ≤ x }, written A↑

	 Reversely, a down-set of A is { x ∈ X | x ≤ A }, written A↓

	 Notice that, if write x↑ for x ∈ X, then it's {x}↑

	 Reversely, x↓ = {x}↓

** chain

	 If ∀ x, y ∈ A, we have x ≤ y or y ≤ x, which means we always have relation result for any two elements, then we say A is a *chain*

*** ω-chain

		If a *chain* can be indexed by ℕ, it's a ω-chain

*** anti-chain

		If ∀ x, y ∈ A, x ≤ y ⟹  y ≤ x, A is a *anti-chain*

** reflect order

	 A function /f/ is said to *reflect order* if given any x, y ∈ X, f(x) ≤ f(y) ⟹  x ≤ y

** order preserving

	 A monotone function can also be said it's *order preserving*

** function order

	 We can also scale order to function,

	 f ≤ g, if ∀ x ∈ X, f(x) ≤ g(x)

	 where f, g : X → Y

* proposition

** Identity function on any preordered set is monotone
** Composition of two monotone functions is monotone
** Compose function between preordered sets is monotone

	 Consider X, Y, Z be preordered sets

	 ∘ : (Y -> Z) × (X -> Y) → (X → Z)

	 ∘ (g, f) = λ x . g (f x)

	 The compose function ∘ is monotone between preordered sets

** f : X × Y → Z is monotone, if it's monotone in each variable separately

	 details, it said

	 x ≤ x' ⟹  f(x, y) ≤ f(x', y)

	 and

	 y ≤ y' ⟹  f(x, y) ≤ f(x, y')

* poset (preoder free from powerset)

	*poset* is an interesting instance, its the preorder free from a powerset of any set X

	The ⊆ is the ≤ here, for any two elements of powerset a, b ∈ P(X)
	
	- a ⋃ b is a ∨ b
	- a ⋂ b is a ∧ b  
